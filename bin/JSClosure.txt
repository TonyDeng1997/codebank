Javascript closure

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures

1. Simply say, it is,

function A() {
 function B() {
   // do something not return or with return
 }
 return B;
}

var myFunc = A();
myFunc();

Example,

function makeAdder(x) {
  return function(y) {
    return x + y;
  };
}

var add5 = makeAdder(5);
var add10 = makeAdder(10);

console.log(add5(2));  // 7
console.log(add10(2)); // 12

so makeAdder(5) makes another function call add5, it is like a downvalue of Mathematica.

so add5 can take argument too, because it was defined so.

Module patterns,

var counter = (function() {
  var privateCounter = 0;
  function changeBy(val) {
    privateCounter += val;
  }
  return {
    increment: function() {
      changeBy(1);
    },
    decrement: function() {
      changeBy(-1);
    },
    value: function() {
      return privateCounter;
    }
  };   
})();

console.log(counter.value()); // logs 0
counter.increment();
counter.increment();
console.log(counter.value()); // logs 2
counter.decrement();
console.log(counter.value()); // logs 1

Another example,

var add = (function () {
    var counter = 0;
    return function () {return counter += 1;}
})();

add();
add();
add();

// the counter is now 3
