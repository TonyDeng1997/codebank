1. DFS vs BFS

BFS: from wiki using tree example, implemented using a queue or list.
Pros: Exhaustive search algorithm, simple to implement and does not suffer from
      infinite loop and can be applied to any problem.
Cons: One disadvantage of BFS is that it is a ¡®blind¡¯ search, 
		when the search space is large the search performance 
		will be poor compared to other heuristic searches.  
		BFS needs more memory as compared to DFS.
		It performs best if the goal is found in the upper left of the tree
		and bad in the bottom level of the tree.

DFS:  The depth-first search algorithm is used to vertically traverse nodes of
 information of a graph formatted in a tree structure.
 One of the most important features for a depth-first search is the 
 ability to keep track of the nodes that have already been visited. 

Pros:
Cons: In depth-first search ¡°each node has two times associated with it:
 the discovery time and the finish time¡± (Kravitz, David & Lafferty, 1997). If the search parameter is large (i.e., a large amount of nodes) then ¡°the storage required for all of these times becomes¡± quickly unmanageable (Kravitz, David & Lafferty, 1997)


https://en.wikibooks.org/wiki/Artificial_Intelligence/Search/Heuristic_search/Depth-first_search
https://en.wikibooks.org/wiki/Artificial_Intelligence/Search/Exhaustive_search/Breadth-first_search