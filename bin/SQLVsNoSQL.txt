SQL Vs NoSQL

SQL
Pros: mature, capable of doing all types of data storage and querying.
Cons: sql join/multiple join can be time consuming.

NoSQL
Pros: what really is scalability, performance and cost.

1/ provides performance, scalability, and flexibility required by modern applications.
      it is much suited for big data and agile software development.  
      It can combine any type of data structure and unstructure.
      You can update schema without interruption or downtime of your application.
2/ scales better, and unlimited in growth, horizonal scaling(span over different machines)
More on horizonal scaling of NoSQL. 
In most typical situations, SQL databases are vertically scalable. 
You can manage increasing load by increasing the CPU, RAM, SSD, etc, 
on a single server. On the other hand, NoSQL databases are horizontally 
scalable. You can just add few more servers easily in your NoSQL database 
infrastructure to handle the large traffic.
       
3/ high performance, low latency and high throughput
 Embedded documents and arrays reduce need for joins, which is key for high performance and speed.
 
4/ cost and easy to use
      
Cons: No join, and sacrifice many aspects that relational database has. 
does not have transactions, 

5/ Graph databases 
Examples of this type of database include Neo4J and InfiniteGraph.

6/  Columnar (or Wide-Column) Databases
Instead of ¡®tables¡¯, in columnar databases you have column families,
which are containers for rows. Unlike RDBMS, you don¡¯t need to know all 
of the columns up front, each row doesn¡¯t have to have the same number 
of columns. Columnar databases are best suited to analysing huge datasets- 
big names include Cassandra and HBase.


ref:

http://dataconomy.com/2014/07/sql-vs-nosql-need-know/
http://www.zdnet.com/article/what-is-nosql-and-why-do-you-need-it/
http://www.thegeekstuff.com/2014/01/sql-vs-nosql-db/?utm_source=tuicool
https://www.sitepoint.com/sql-vs-nosql-choose/

7/ Properties
ACID compliancy for SQL
 NoSQL database follows the Brewers CAP theorem 
 (Consistency, Availability and Partition tolerance)
 
8/ SQL database examples: MySql, Oracle, Sqlite, Postgres and MS-SQL. 
NoSQL database examples: MongoDB, BigTable, Redis, RavenDb, 
Cassandra, Hbase, Neo4j and CouchDb

