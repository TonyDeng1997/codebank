//http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/HashMap.java

The following document explains how java 8 implements its hashmap,

1. Node class
It basically has key, value, hashcode, and next pointer to the next node
so it has setter/getter, and constructor.

The most interesting part is the hashCode() and the equals() function,

 public final int hashCode() {
            return Objects.hashCode(key) ^ Objects.hashCode(value);
 }

 and 
 
 public final boolean equals(Object o) {
   if (o == this)
                return true;
            if (o instanceof Map.Entry) {
                Map.Entry<?,?> e = (Map.Entry<?,?>)o;
                if (Objects.equals(key, e.getKey()) &&
                    Objects.equals(value, e.getValue()))
                    return true;
            }
            return false;
   }
  }
  
  It is using a tree to implement resolving the collision.
  
  
 